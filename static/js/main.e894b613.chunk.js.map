{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/search-box/SearchBox.component.jsx","ClassApp.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","resp","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCFbC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHdM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCHG,E,kDAzCX,aAAc,IAAD,8BACT,gBAeJH,aAAe,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpD,EAAKC,MAAM,CACRb,SAAS,GACTU,YAAY,IAJN,E,qDAUb,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAO3C,WAAS,IAAD,EAC2BC,KAAKN,MAA7Bb,EADH,EACGA,SAASU,EADZ,EACYA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAlClBI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e894b613.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2 >{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Card } from '../card/Card.component';\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'> \r\n     {props.monsters.map( monster => ( \r\n        <Card key={monster.id} monster={monster} />\r\n     ))}  \r\n     </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\n\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input\r\n        className='search' \r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n)\r\n\r\n\r\n","import React,{Component} from 'react'\r\nimport './App.css';\r\nimport { CardList } from './components/card-list/Card-list.component';\r\nimport { SearchBox } from './components/search-box/SearchBox.component';\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n           monsters:[],\r\n           searchField:'',\r\n        };\r\n\r\n    \r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(resp => resp.json())\r\n        .then(users => this.setState({monsters:users}))\r\n    }\r\n\r\n    handleChange = e => this.setState({searchField:e.target.value})\r\n    \r\n\r\n\r\n    render(){\r\n        const {monsters,searchField} = this.state;\r\n        const filteredMonsters = monsters.filter(monster => \r\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n        );\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Monsters Rodolex</h1>\r\n                <SearchBox \r\n                    placeholder='Search Monsters'\r\n                    handleChange={this.handleChange}\r\n                />\r\n                <CardList monsters={filteredMonsters}>\r\n                \r\n                </CardList>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ClassApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}